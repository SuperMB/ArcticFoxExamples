{
    "ColumnQuantile": [
        {
            "KitText": "#> ColumnQuantile CustomerAge --exampleTitle Get Default Quantile of a Single Column --example By default, quantile returns the median (0.5 quantile) when no specific value is provided. In this example, we compute the median CustomerAge to understand the central tendency of the column.",
            "CodeAfterKit": "\nbankTransactionsDfQuantile = bankTransactionsDf['CustomerAge'].quantile()",
            "ExampleDescription": "By default, quantile returns the median (0.5 quantile) when no specific value is provided. In this example, we compute the median CustomerAge to understand the central tendency of the column.",
            "ExampleTitle": "Get Default Quantile of a Single Column"
        },
        {
            "KitText": "#> ColumnQuantile --columns CustomerAge --quantile .25 .5 .75 1 --exampleTitle Get Specific Quantiles of a Single Column --example Rather than just retrieving the default median, we can specify the exact quantiles we want. Here we calculate the 25%, 50%, 75%, and 100% of CustomerAge to better understand its distribution.",
            "CodeAfterKit": "\nbankTransactionsDfQuantile = bankTransactionsDf['CustomerAge'].quantile( [ .25, .5, .75, 1 ] )",
            "ExampleDescription": "Rather than just retrieving the default median, we can specify the exact quantiles we want. Here we calculate the 25%, 50%, 75%, and 100% of CustomerAge to better understand its distribution.",
            "ExampleTitle": "Get Specific Quantiles of a Single Column"
        },
        {
            "KitText": "#> ColumnQuantile --columns CustomerAge --quantile .25 .5 .75 1 --variablesForQuantiles --exampleTitle Create Variables for Each Quantile --example In addition to computing quantiles, we can assign each quantile value to its own variable. This allows for easier use later in code when comparing or referencing specific thresholds.",
            "CodeAfterKit": "\nbankTransactionsDfQuantile = bankTransactionsDf['CustomerAge'].quantile( [ .25, .5, .75, 1 ] )\nbankTransactionsDfQuantile0 = bankTransactionsDfQuantile.iloc[0]\nbankTransactionsDfQuantile1 = bankTransactionsDfQuantile.iloc[1]\nbankTransactionsDfQuantile2 = bankTransactionsDfQuantile.iloc[2]\nbankTransactionsDfQuantile3 = bankTransactionsDfQuantile.iloc[3]",
            "ExampleDescription": "In addition to computing quantiles, we can assign each quantile value to its own variable. This allows for easier use later in code when comparing or referencing specific thresholds.",
            "ExampleTitle": "Create Variables for Each Quantile"
        }
    ]
}